@model IEnumerable<Library_management.Models.Book>

@{
    ViewData["Title"] = "BookList";
}

<h1>BookList</h1>


<div class="container-fluid">


<table class="table overflow-hidden table-striped">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
          
            <th>
                @Html.DisplayNameFor(model => model.Borrow_count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IS_borrow)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stop)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WhoBorrowNow)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                    <td>
                        @Html.DisplayFor(model => item.Id)
                    </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
          
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.Borrow_count)
            </td>
            <td>
                        @if (item.IS_borrow)
                        {
                            <div asp-route-id="@item?.Id" asp-action="Return" class="" style="">&nbsp;<b class="text-danger">ถูกยืม</b></div>
                            <br class="dropdown-divider"/>
                            <form asp-action="Return" asp-route-id="@item.Id" method="post" id="return">
                                @if (item.IS_borrow)
                                {
                                    <input class="btn btn-warning py-1" type="submit" value="คืน" />
                                }
                               
                            </form>
                        }
                        else
                        {
                            <div asp-route-id="@item?.Id" asp-action="ConfirmBorrow" class="" style="">&nbsp;<b class="text-success">ว่าง</b></div>
                        }
                      
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stop)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WhoBorrowNow)
            </td>
            <td class="">
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success py-1">Edit</a>
                <hr class="dropdown-divider"/>
                <a asp-action="Detail" asp-route-id="@item.Id" class="btn btn-primary py-1">Details</a>
                 <hr class="dropdown-divider"/>
                 <form asp-action="Delete" asp-route-id="@item.Id" method="post" id="delete_item" onsubmit="SendForm(event)">
                            @if (item.IS_borrow){
                                <input class="btn btn-danger py-1" hidden type="submit" value="Delete"/>
                            }
                            else
                            {
                                <input class="btn btn-danger py-1" type="submit" value="Delete" />
                            }
                        </form>
                      
            </td>
        </tr>
}
    </tbody>
</table>
</div>


@section Scripts
{
    <script>
        function SendForm(e) {
            e.preventDefault();
            swal.fire({
                title: 'Do you want to Delete item ?',
                icon: "question",
                showCancelButton: true
            }).then(result => {
                if (result.isConfirmed) {
                    const form = e.target;
                    form.submit();
                }
            })

            
        }

    </script>
}

